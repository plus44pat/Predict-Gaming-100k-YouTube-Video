{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPhWJJ+jjPL3jt/Dme0rBK4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ewqoe41hYDRB"},"outputs":[],"source":["import pandas as pd\n","\n","# File paths\n","activity_file = \"/content/drive/My Drive/Capstone Project 2/video_activity_channel.csv\"\n","channel_info_file = \"/content/drive/My Drive/Capstone Project 2/search_results_video_info_no_shorts_with_channel_info.csv\"\n","video_info_file = \"/content/drive/My Drive/Capstone Project 2/search_results_video_info_no_shorts.csv\"\n","channel_stats_file = \"/content/drive/My Drive/Capstone Project 2/Nov_Jan_Channel_Stats.csv\"\n","\n","# Load CSV files into pandas DataFrames\n","activity_df = pd.read_csv(activity_file)\n","channel_df = pd.read_csv(channel_info_file)\n","videos_df = pd.read_csv(video_info_file)\n","channel_stats_df = pd.read_csv(channel_stats_file)\n","\n","# Drop duplicates\n","activity_df.drop_duplicates(inplace=True)\n","channel_df.drop_duplicates(inplace=True)\n","videos_df.drop_duplicates(inplace=True)\n","\n","# If you want to reset the index after dropping duplicates\n","activity_df.reset_index(drop=True, inplace=True)\n","channel_df.reset_index(drop=True, inplace=True)\n","videos_df.reset_index(drop=True, inplace=True)\n","\n","# Perform inner join on a common column (assuming it's named 'common_column_name')\n","# Change 'common_column_name' to the actual common column name in your data\n","merged_df = pd.merge(videos_df, activity_df, on='Video ID', how='left')\n","merged_df2 = pd.merge(merged_df, channel_df, on='Channel ID', how='left')\n","\n","# Filter merged_df2 to keep rows not present in dupes_df\n","filtered_merged_df2 = merged_df2[~merged_df2['Video ID']]\n","\n","\n","# Merge with past 3 months channel stats\n","union_df = pd.merge(union_df, past_3_months_channel_stats_df, on='Channel ID', how='left')\n","\n","# Update the video_activity_channel.csv\n","union_df.to_csv(activity_file, index=False)\n","\n","print(union_df.info())\n"]}]}